#*********************************************************************
# Copyright (c) Intel Corporation 2021
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
permissions:
  contents: read

jobs:
  formatting:
    name: runner / formatting
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Format
        run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
      - name: Run go vet
        run: go vet ./...

  golangci-lint:
    name: runner / golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Check out code into the Go module directory
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@f9bba13753278f6a73b27a56a3ffb1bfda90ed71 # v2.8.0
        with:
          fail_level: error
          golangci_lint_flags: "--config=./.golangci.yml ./..."

  # This workflow contains a single job called "build"
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      checks: write
      pull-requests: write
    strategy:
      matrix:
        os: [windows-2022, ubuntu-22.04, ubuntu-24.04]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Run unit tests (JUnit report + coverage)
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: |
          export GOPATH="$HOME/go/"
          export PATH=$PATH:$GOPATH/bin
          go install gotest.tools/gotestsum@latest
          gotestsum --junitfile rpc-go-unit.xml --format short-verbose -- -coverprofile=coverage.out -covermode=atomic ./...

      - name: run the tests with coverage
        if: ${{ matrix.os != 'ubuntu-24.04' }}
        run: go test ./... -coverprofile=coverage.out -covermode=atomic

      - name: Publish Unit Test Results
        if: ${{ always() && matrix.os == 'ubuntu-24.04' }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: rpc-go-unit.xml
          check_name: Unit tests (Go)
          comment_mode: failures
          report_individual_runs: true

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        name: Upload Coverage Results

      # Runs a single command using the runners shell
      - name: build go
        if: ${{ matrix.os == 'windows-2022' }}
        run: go build -o rpc.exe ./cmd/rpc

      # Runs a single command using the runners shell
      - name: build go
        if: ${{ matrix.os != 'windows-2022' }}
        run: go build -o rpc ./cmd/rpc

  # JUnit report is surfaced in PR Checks via the step above; artifact upload not needed.
