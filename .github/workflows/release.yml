#*********************************************************************
# Copyright (c) Intel Corporation 2023
# SPDX-License-Identifier: Apache-2.0
#*********************************************************************/

# This workflow will release new versions when required using semantic-release

name: Semantic-Release CI

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@1b05615854632b887b69ae1be8cbefe72d3ae423 # v2.6.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
      
      - name: Docker Login
        if: ${{ github.ref == 'refs/heads/main' }}      
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: vprodemo.azurecr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          logout: true
          
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@61680d0e9b02ff86f5648ade99e01be17f0260a4 # v4.0.0
        with:
          semantic_version: 19.0.5  # It is recommended to specify specifying version range
                                      # for semantic-release.
          extra_plugins: |
              @semantic-release/exec@6.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Next Version
        id: version
        run: |
          git fetch --tags
          echo "next=$(git tag | sort -r --version-sort | head -n1)" >> "$GITHUB_OUTPUT"

      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          repository: open-amt-cloud-toolkit/e2e-testing
          ref: docker-release
          clean: true
          token: ${{ secrets.PROJECTS_PAT }}

      - name: Create docker-release @ ${{ steps.version.outputs.next }}
        env:
          RELEASE_YAML: release/rpc-go.yml
          NEXT_VERSION: ${{ steps.version.outputs.next }}
        run: |
          echo "Releasing ${{ github.repository }}@$NEXT_VERSION"
          if [ "$NEXT_VERSION" != "" ]; then
            CURRENT_VERSION=$(sed -nre 's/(.*):v[0-9]*(([0-9]+\.)*[0-9]+).*/v\2/p' $RELEASE_YAML)
            sed -i "s/$CURRENT_VERSION/$NEXT_VERSION/g" $RELEASE_YAML
            echo "========================="
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git status
            git add .
            git commit -m "release(rpc-go): automated release of $NEXT_VERSION @ ${GITHUB_SHA::7}"
            git push origin docker-release
          fi